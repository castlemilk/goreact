// source: services/echo/echo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.goreact.echo.DynamicMessage', null, global);
goog.exportSymbol('proto.goreact.echo.DynamicMessageUpdate', null, global);
goog.exportSymbol('proto.goreact.echo.Embedded', null, global);
goog.exportSymbol('proto.goreact.echo.Embedded.MarkCase', null, global);
goog.exportSymbol('proto.goreact.echo.SimpleMessage', null, global);
goog.exportSymbol('proto.goreact.echo.SimpleMessage.CodeCase', null, global);
goog.exportSymbol('proto.goreact.echo.SimpleMessage.ExtCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.goreact.echo.Embedded = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.goreact.echo.Embedded.oneofGroups_);
};
goog.inherits(proto.goreact.echo.Embedded, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.goreact.echo.Embedded.displayName = 'proto.goreact.echo.Embedded';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.goreact.echo.SimpleMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.goreact.echo.SimpleMessage.oneofGroups_);
};
goog.inherits(proto.goreact.echo.SimpleMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.goreact.echo.SimpleMessage.displayName = 'proto.goreact.echo.SimpleMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.goreact.echo.DynamicMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.goreact.echo.DynamicMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.goreact.echo.DynamicMessage.displayName = 'proto.goreact.echo.DynamicMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.goreact.echo.DynamicMessageUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.goreact.echo.DynamicMessageUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.goreact.echo.DynamicMessageUpdate.displayName = 'proto.goreact.echo.DynamicMessageUpdate';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.goreact.echo.Embedded.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.goreact.echo.Embedded.MarkCase = {
  MARK_NOT_SET: 0,
  PROGRESS: 1,
  NOTE: 2
};

/**
 * @return {proto.goreact.echo.Embedded.MarkCase}
 */
proto.goreact.echo.Embedded.prototype.getMarkCase = function() {
  return /** @type {proto.goreact.echo.Embedded.MarkCase} */(jspb.Message.computeOneofCase(this, proto.goreact.echo.Embedded.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.goreact.echo.Embedded.prototype.toObject = function(opt_includeInstance) {
  return proto.goreact.echo.Embedded.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.goreact.echo.Embedded} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goreact.echo.Embedded.toObject = function(includeInstance, msg) {
  var f, obj = {
    progress: jspb.Message.getFieldWithDefault(msg, 1, 0),
    note: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.goreact.echo.Embedded}
 */
proto.goreact.echo.Embedded.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.goreact.echo.Embedded;
  return proto.goreact.echo.Embedded.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.goreact.echo.Embedded} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.goreact.echo.Embedded}
 */
proto.goreact.echo.Embedded.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProgress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.goreact.echo.Embedded.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.goreact.echo.Embedded.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.goreact.echo.Embedded} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goreact.echo.Embedded.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 progress = 1;
 * @return {number}
 */
proto.goreact.echo.Embedded.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.goreact.echo.Embedded} returns this
 */
proto.goreact.echo.Embedded.prototype.setProgress = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.goreact.echo.Embedded.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.goreact.echo.Embedded} returns this
 */
proto.goreact.echo.Embedded.prototype.clearProgress = function() {
  return jspb.Message.setOneofField(this, 1, proto.goreact.echo.Embedded.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.Embedded.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string note = 2;
 * @return {string}
 */
proto.goreact.echo.Embedded.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.goreact.echo.Embedded} returns this
 */
proto.goreact.echo.Embedded.prototype.setNote = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.goreact.echo.Embedded.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.goreact.echo.Embedded} returns this
 */
proto.goreact.echo.Embedded.prototype.clearNote = function() {
  return jspb.Message.setOneofField(this, 2, proto.goreact.echo.Embedded.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.Embedded.prototype.hasNote = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.goreact.echo.SimpleMessage.oneofGroups_ = [[3,4],[6,7]];

/**
 * @enum {number}
 */
proto.goreact.echo.SimpleMessage.CodeCase = {
  CODE_NOT_SET: 0,
  LINE_NUM: 3,
  LANG: 4
};

/**
 * @return {proto.goreact.echo.SimpleMessage.CodeCase}
 */
proto.goreact.echo.SimpleMessage.prototype.getCodeCase = function() {
  return /** @type {proto.goreact.echo.SimpleMessage.CodeCase} */(jspb.Message.computeOneofCase(this, proto.goreact.echo.SimpleMessage.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.goreact.echo.SimpleMessage.ExtCase = {
  EXT_NOT_SET: 0,
  EN: 6,
  NO: 7
};

/**
 * @return {proto.goreact.echo.SimpleMessage.ExtCase}
 */
proto.goreact.echo.SimpleMessage.prototype.getExtCase = function() {
  return /** @type {proto.goreact.echo.SimpleMessage.ExtCase} */(jspb.Message.computeOneofCase(this, proto.goreact.echo.SimpleMessage.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.goreact.echo.SimpleMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.goreact.echo.SimpleMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.goreact.echo.SimpleMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goreact.echo.SimpleMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    num: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lineNum: jspb.Message.getFieldWithDefault(msg, 3, 0),
    lang: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: (f = msg.getStatus()) && proto.goreact.echo.Embedded.toObject(includeInstance, f),
    en: jspb.Message.getFieldWithDefault(msg, 6, 0),
    no: (f = msg.getNo()) && proto.goreact.echo.Embedded.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.goreact.echo.SimpleMessage}
 */
proto.goreact.echo.SimpleMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.goreact.echo.SimpleMessage;
  return proto.goreact.echo.SimpleMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.goreact.echo.SimpleMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.goreact.echo.SimpleMessage}
 */
proto.goreact.echo.SimpleMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLineNum(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLang(value);
      break;
    case 5:
      var value = new proto.goreact.echo.Embedded;
      reader.readMessage(value,proto.goreact.echo.Embedded.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEn(value);
      break;
    case 7:
      var value = new proto.goreact.echo.Embedded;
      reader.readMessage(value,proto.goreact.echo.Embedded.deserializeBinaryFromReader);
      msg.setNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.goreact.echo.SimpleMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.goreact.echo.SimpleMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.goreact.echo.SimpleMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goreact.echo.SimpleMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.goreact.echo.Embedded.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getNo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.goreact.echo.Embedded.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.goreact.echo.SimpleMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 num = 2;
 * @return {number}
 */
proto.goreact.echo.SimpleMessage.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 line_num = 3;
 * @return {number}
 */
proto.goreact.echo.SimpleMessage.prototype.getLineNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.setLineNum = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.goreact.echo.SimpleMessage.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.clearLineNum = function() {
  return jspb.Message.setOneofField(this, 3, proto.goreact.echo.SimpleMessage.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.SimpleMessage.prototype.hasLineNum = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string lang = 4;
 * @return {string}
 */
proto.goreact.echo.SimpleMessage.prototype.getLang = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.setLang = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.goreact.echo.SimpleMessage.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.clearLang = function() {
  return jspb.Message.setOneofField(this, 4, proto.goreact.echo.SimpleMessage.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.SimpleMessage.prototype.hasLang = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Embedded status = 5;
 * @return {?proto.goreact.echo.Embedded}
 */
proto.goreact.echo.SimpleMessage.prototype.getStatus = function() {
  return /** @type{?proto.goreact.echo.Embedded} */ (
    jspb.Message.getWrapperField(this, proto.goreact.echo.Embedded, 5));
};


/**
 * @param {?proto.goreact.echo.Embedded|undefined} value
 * @return {!proto.goreact.echo.SimpleMessage} returns this
*/
proto.goreact.echo.SimpleMessage.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.SimpleMessage.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 en = 6;
 * @return {number}
 */
proto.goreact.echo.SimpleMessage.prototype.getEn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.setEn = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.goreact.echo.SimpleMessage.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.clearEn = function() {
  return jspb.Message.setOneofField(this, 6, proto.goreact.echo.SimpleMessage.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.SimpleMessage.prototype.hasEn = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Embedded no = 7;
 * @return {?proto.goreact.echo.Embedded}
 */
proto.goreact.echo.SimpleMessage.prototype.getNo = function() {
  return /** @type{?proto.goreact.echo.Embedded} */ (
    jspb.Message.getWrapperField(this, proto.goreact.echo.Embedded, 7));
};


/**
 * @param {?proto.goreact.echo.Embedded|undefined} value
 * @return {!proto.goreact.echo.SimpleMessage} returns this
*/
proto.goreact.echo.SimpleMessage.prototype.setNo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.goreact.echo.SimpleMessage.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.goreact.echo.SimpleMessage} returns this
 */
proto.goreact.echo.SimpleMessage.prototype.clearNo = function() {
  return this.setNo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.SimpleMessage.prototype.hasNo = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.goreact.echo.DynamicMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.goreact.echo.DynamicMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.goreact.echo.DynamicMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goreact.echo.DynamicMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    structField: (f = msg.getStructField()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    valueField: (f = msg.getValueField()) && google_protobuf_struct_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.goreact.echo.DynamicMessage}
 */
proto.goreact.echo.DynamicMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.goreact.echo.DynamicMessage;
  return proto.goreact.echo.DynamicMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.goreact.echo.DynamicMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.goreact.echo.DynamicMessage}
 */
proto.goreact.echo.DynamicMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setStructField(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Value;
      reader.readMessage(value,google_protobuf_struct_pb.Value.deserializeBinaryFromReader);
      msg.setValueField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.goreact.echo.DynamicMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.goreact.echo.DynamicMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.goreact.echo.DynamicMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goreact.echo.DynamicMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStructField();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getValueField();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Struct struct_field = 1;
 * @return {?proto.google.protobuf.Struct}
 */
proto.goreact.echo.DynamicMessage.prototype.getStructField = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 1));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.goreact.echo.DynamicMessage} returns this
*/
proto.goreact.echo.DynamicMessage.prototype.setStructField = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.goreact.echo.DynamicMessage} returns this
 */
proto.goreact.echo.DynamicMessage.prototype.clearStructField = function() {
  return this.setStructField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.DynamicMessage.prototype.hasStructField = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Value value_field = 2;
 * @return {?proto.google.protobuf.Value}
 */
proto.goreact.echo.DynamicMessage.prototype.getValueField = function() {
  return /** @type{?proto.google.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Value, 2));
};


/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.goreact.echo.DynamicMessage} returns this
*/
proto.goreact.echo.DynamicMessage.prototype.setValueField = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.goreact.echo.DynamicMessage} returns this
 */
proto.goreact.echo.DynamicMessage.prototype.clearValueField = function() {
  return this.setValueField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.DynamicMessage.prototype.hasValueField = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.goreact.echo.DynamicMessageUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.goreact.echo.DynamicMessageUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.goreact.echo.DynamicMessageUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goreact.echo.DynamicMessageUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.goreact.echo.DynamicMessage.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.goreact.echo.DynamicMessageUpdate}
 */
proto.goreact.echo.DynamicMessageUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.goreact.echo.DynamicMessageUpdate;
  return proto.goreact.echo.DynamicMessageUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.goreact.echo.DynamicMessageUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.goreact.echo.DynamicMessageUpdate}
 */
proto.goreact.echo.DynamicMessageUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.goreact.echo.DynamicMessage;
      reader.readMessage(value,proto.goreact.echo.DynamicMessage.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.goreact.echo.DynamicMessageUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.goreact.echo.DynamicMessageUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.goreact.echo.DynamicMessageUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goreact.echo.DynamicMessageUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.goreact.echo.DynamicMessage.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional DynamicMessage body = 1;
 * @return {?proto.goreact.echo.DynamicMessage}
 */
proto.goreact.echo.DynamicMessageUpdate.prototype.getBody = function() {
  return /** @type{?proto.goreact.echo.DynamicMessage} */ (
    jspb.Message.getWrapperField(this, proto.goreact.echo.DynamicMessage, 1));
};


/**
 * @param {?proto.goreact.echo.DynamicMessage|undefined} value
 * @return {!proto.goreact.echo.DynamicMessageUpdate} returns this
*/
proto.goreact.echo.DynamicMessageUpdate.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.goreact.echo.DynamicMessageUpdate} returns this
 */
proto.goreact.echo.DynamicMessageUpdate.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.DynamicMessageUpdate.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.goreact.echo.DynamicMessageUpdate.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.goreact.echo.DynamicMessageUpdate} returns this
*/
proto.goreact.echo.DynamicMessageUpdate.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.goreact.echo.DynamicMessageUpdate} returns this
 */
proto.goreact.echo.DynamicMessageUpdate.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goreact.echo.DynamicMessageUpdate.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.goreact.echo);
